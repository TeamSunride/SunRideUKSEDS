#include <SPI.h>
#include <SD.h>

int ledPin =  13;    // LED connected to digital pin 13, up for change
//JSON
const int chipSelect = 10;

File myFile;

void setup() 
{ 
  pinMode(ledPin, OUTPUT);     

  //Serial.begin(9600); //9600bps is default for OpenLog
  //Serial.begin(57600); //Much faster serial, used for testing buffer overruns on OpenLog
  Serial.begin(115200); //Much faster serial, used for testing buffer overruns on OpenLog

  delay(1000); //Wait a second for OpenLog to init

  Serial.println(); 
  Serial.println("Run OpenLog Test"); 
  // wait for Serial Monitor to connect. Needed for native USB port boards only:
while (!Serial);
  Serial.print("Initializing SD card...");
  if (!SD.begin(10)) {
    Serial.println("initialization failed!");
    while (1);
  }
  Serial.println("initialization done.");
  if (SD.exists("example.txt")) {
    Serial.println("example.txt exists.");
  } else {
    Serial.println("example.txt doesn't exist.");
  }
  // open a new file and immediately close it:
  Serial.println("Creating example.txt...");
  myFile = SD.open("example.txt", FILE_WRITE);
  myFile.close();
  // Check to see if the file exists:
  if (SD.exists("example.txt")) {

    Serial.println("example.txt exists.");
  } else {

    Serial.println("example.txt doesn't exist.");
  }
} 
void loop() 
{ 
  int testAmt = 10; 
  //At 9600, testAmt of 4 takes about 1 minute, 10 takes about 3 minutes
  //At 57600, testAmt of 10 takes about 1 minute, 40 takes about 5 minutes
  //testAmt of 10 will push 111,000 characters/bytes. With header and footer strings, total is 111,052
  
  //Each test is 100 lines. 10 tests is 1000 lines (11,000 characters)
  for(int numofTests = 0 ; numofTests < testAmt ; numofTests++)
  {
    //This loop will print 100 lines of 110 characters each
    for(int k = 33; k < 43 ; k++)
    {
      //Print one line of 110 characters with marker in the front (markers go from '!' to '*')
      Serial.print(k, BYTE); //Print the ASCII value directly: ! then " then #, etc
      Serial.println(":abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-!#");
      //delay(50);
  
      //Then print 9 lines of 110 characters with new line at the end of the line
      for(int i = 1 ; i < 10 ; i++)
      {
        Serial.print(i, DEC);
        Serial.println(":abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-!#");
        //delay(50);
      }  

    if(digitalRead(ledPin) == 0)
      digitalWrite(ledPin, HIGH);
    else
      digitalWrite(ledPin, LOW);

    }
  }

  unsigned long totalCharacters = (long)testAmt * 100 * 110;
  
  Serial.print("Characters pushed: ");
  Serial.println(totalCharacters);  
  Serial.print("Time taken (s): ");
  Serial.println(millis()/1000);
  Serial.println("Done!");
  
  while(1)
  {
    digitalWrite(ledPin, HIGH);   // set the LED on
    delay(1000);                  // wait for a second
    digitalWrite(ledPin, LOW);    // set the LED off
    delay(1000);                  // wait for a second
  }
} 
